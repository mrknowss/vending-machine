package Vending;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Mark Anthony
 */
public class Data extends javax.swing.JFrame {

      java.util.Date date = new java.util.Date();
    java.sql.Date sqlDate = new java.sql.Date(date.getTime());
    
    static String url = "jdbc:mysql://localhost:3306/vendingmachine1";
    static String sUser = "root";
     static String sPass = "";

     Connection con=null;
    ResultSet rs=null;
    PreparedStatement pst=null;
    
    
    
    
    public Data() {
        initComponents();
        con=DatabaseConn.mycon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel9 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jTextField16 = new javax.swing.JTextField();
        jTextField17 = new javax.swing.JTextField();
        jTextField18 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jButton10 = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        stocks = new javax.swing.JButton();
        accoount = new javax.swing.JButton();
        sales = new javax.swing.JButton();
        logOut = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        items = new javax.swing.JTextField();
        pname = new javax.swing.JTextField();
        qtys = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        up = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        pricess = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        totals = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jPanel = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        acc = new javax.swing.JTextField();
        pass = new javax.swing.JTextField();
        fName = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        addM = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        delb = new javax.swing.JButton();
        updateM = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        user = new javax.swing.JTextField();

        jPanel9.setBackground(new java.awt.Color(204, 255, 204));
        jPanel9.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel9.setForeground(new java.awt.Color(102, 255, 102));

        jLabel20.setBackground(new java.awt.Color(255, 255, 255));
        jLabel20.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel20.setText("Product Name");

        jTextField16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField16ActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel21.setText("Quantity");

        jLabel22.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel22.setText("Price");

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "pID", "Products", "Qty"
            }
        ));
        jScrollPane6.setViewportView(jTable5);

        jButton10.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jButton10.setForeground(new java.awt.Color(0, 255, 51));
        jButton10.setText("Update");
        jButton10.setMaximumSize(new java.awt.Dimension(46, 20));

        jLabel23.setFont(new java.awt.Font("Segoe UI Semibold", 1, 24)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("STOCKS");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel20)
                                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(52, 52, 52))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86)))
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap(84, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(87, 87, 87))
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        stocks.setBackground(new java.awt.Color(255, 255, 255));
        stocks.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        stocks.setText("STOCKS");
        stocks.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.green, null, null));
        stocks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stocksActionPerformed(evt);
            }
        });
        jPanel1.add(stocks, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 160, 50));

        accoount.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        accoount.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mark Anthony\\Downloads\\icons8-account-30.png")); // NOI18N
        accoount.setText("ACCOUNT");
        accoount.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(51, 255, 0), null, null));
        accoount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accoountActionPerformed(evt);
            }
        });
        jPanel1.add(accoount, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 270, 160, 50));

        sales.setBackground(new java.awt.Color(255, 255, 255));
        sales.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        sales.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mark Anthony\\Downloads\\icons8-sales-30.png")); // NOI18N
        sales.setText("SALES");
        sales.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.green, null, null));
        sales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salesActionPerformed(evt);
            }
        });
        jPanel1.add(sales, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, 160, 50));

        logOut.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        logOut.setForeground(new java.awt.Color(255, 0, 0));
        logOut.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mark Anthony\\Downloads\\icons8-log-out-30 (1).png")); // NOI18N
        logOut.setText("  LOG OUT");
        logOut.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.green, null, null));
        logOut.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        logOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutActionPerformed(evt);
            }
        });
        jPanel1.add(logOut, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, 120, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 160, 420));

        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel5.setBackground(new java.awt.Color(204, 204, 204));
        jPanel5.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel2.setText("Item_num");
        jPanel5.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, 28));

        items.setEditable(false);
        items.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemsActionPerformed(evt);
            }
        });
        jPanel5.add(items, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, 140, 30));

        pname.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jPanel5.add(pname, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 120, 140, 32));

        qtys.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jPanel5.add(qtys, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 170, 142, 30));

        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel4.setText("Quantity");
        jPanel5.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, -1, 24));

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel3.setText("Product Name");
        jPanel5.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 100, 24));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item_num", "Product_name", "Quantity", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel5.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 70, 460, 290));

        up.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        up.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mark Anthony\\Downloads\\icons8-update-30.png")); // NOI18N
        up.setText("Update");
        up.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, java.awt.Color.green, null, null));
        up.setMaximumSize(new java.awt.Dimension(46, 20));
        up.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upActionPerformed(evt);
            }
        });
        jPanel5.add(up, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 271, 140, 40));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("STOCKS INVENTORY");
        jPanel5.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, 470, 54));

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel5.setText("Price");
        jPanel5.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, 40, 24));

        pricess.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jPanel5.add(pricess, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 220, 142, 30));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 16, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 754, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("tab2", jPanel3);

        jPanel8.setBackground(new java.awt.Color(204, 204, 204));
        jPanel8.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item_num", "Products", "Price", "Date_purchase"
            }
        ));
        jScrollPane4.setViewportView(jTable3);

        jPanel8.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 720, 270));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("SALES");
        jPanel8.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 7, 341, 54));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Total sales ");
        jPanel8.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 360, 90, 30));

        totals.setEditable(false);
        totals.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel8.add(totals, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 360, 120, 30));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 765, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 753, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 413, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab1", jPanel2);

        jPanel.setBackground(new java.awt.Color(204, 204, 204));
        jPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel16.setBackground(new java.awt.Color(255, 255, 255));
        jLabel16.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel16.setText("User Name");
        jPanel.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, -1, 28));

        acc.setEditable(false);
        acc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accActionPerformed(evt);
            }
        });
        jPanel.add(acc, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, 139, 34));
        jPanel.add(pass, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 190, 139, 34));
        jPanel.add(fName, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 240, 140, 34));

        jLabel17.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel17.setText("Full Name");
        jPanel.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, -1, 30));

        jLabel18.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel18.setText("Password");
        jPanel.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 190, 80, 30));

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Account_ID", "User Name", "Paswword", "Ful Name", "Date Created"
            }
        ));
        jTable4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable4MouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTable4);

        jPanel.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 60, 480, 270));

        addM.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addM.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mark Anthony\\Downloads\\icons8-add-30.png")); // NOI18N
        addM.setText("Create");
        addM.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        addM.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        addM.setMaximumSize(new java.awt.Dimension(46, 20));
        addM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMActionPerformed(evt);
            }
        });
        jPanel.add(addM, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, 120, 40));

        jLabel19.setBackground(new java.awt.Color(51, 51, 51));
        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("MANAGE ACCOUNT");
        jPanel.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 10, 420, 54));

        delb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        delb.setForeground(new java.awt.Color(255, 51, 51));
        delb.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mark Anthony\\Downloads\\icons8-delete-30.png")); // NOI18N
        delb.setText("Delete");
        delb.setMaximumSize(new java.awt.Dimension(46, 20));
        delb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delbActionPerformed(evt);
            }
        });
        jPanel.add(delb, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 350, 120, 40));

        updateM.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        updateM.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mark Anthony\\Downloads\\icons8-update-30.png")); // NOI18N
        updateM.setText("Update");
        updateM.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        updateM.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        updateM.setMaximumSize(new java.awt.Dimension(46, 20));
        updateM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateMActionPerformed(evt);
            }
        });
        jPanel.add(updateM, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 350, 120, 40));

        jLabel24.setBackground(new java.awt.Color(255, 255, 255));
        jLabel24.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel24.setText("Account ID");
        jPanel.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, 28));

        user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userActionPerformed(evt);
            }
        });
        jPanel.add(user, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 140, 139, 34));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("tab3", jPanel4);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, -20, 770, 440));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void showTableStocks(){
        try{
            String sql= "SELECT * FROM stocks ";
            
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery();
            DefaultTableModel model= (DefaultTableModel) jTable1.getModel();
            while(rs.next()){
                 double price = Double.parseDouble(rs.getString(4)); // Assuming the price is a numeric value
                String fprice = String.format("%.2f", price);
                model.addRow(new String[]{ rs.getString(1),rs.getString(2),rs.getString(3), fprice});
            }
            
        }catch(Exception e){
                
                }
    }
    
    
     public void showTableSales(){
        try{
            String sql= "SELECT * from sale ";
            
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery();
            DefaultTableModel model= (DefaultTableModel) jTable3.getModel();
            while(rs.next()){
                 double price = Double.parseDouble(rs.getString(3)); 
                String fprice = String.format("%.2f", price);
                model.addRow(new String[]{ rs.getString(1),rs.getString(2), fprice,rs.getString(4)});
            }
            
        }catch(Exception e){
                
                }
    }
     
       public void showTableAcc(){
        try{
            String sql= "SELECT * from account ";
            
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery();
            DefaultTableModel acc= (DefaultTableModel) jTable4.getModel();
            while(rs.next()){
                acc.addRow(new String[]{ rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
            }
            
        }catch(Exception e){
                
                }
    }
   
   
    

    private void salesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salesActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(1);
        boolean isTableDisplayed = false;
  
         if (!isTableDisplayed) {
        // Clear existing table data before displaying the table
        DefaultTableModel model = (DefaultTableModel) jTable3.getModel();
        model.setRowCount(0); // Clear existing table data

       
        // Set the flag to true since the table is now displayed
        isTableDisplayed = true;
    }
        showTableSales();
         
        
      

        // Variable to store total price
        double totalPrice = 0.0;

                try {
                     Class.forName("com.mysql.cj.jdbc.Driver");
                     Connection con = DriverManager.getConnection(url, sUser, sPass);
                     String query = "SELECT price FROM sale";

                 try (Statement statement = con.createStatement();
                          ResultSet resultSet = statement.executeQuery(query)) {

        // Loop through the result set and sum up the prices
                      while (resultSet.next()) {
                       double price = resultSet.getDouble("price");
                        totalPrice += price;
                     }
                      String total = String.format("%.2f", totalPrice);
                         totals.setText(total); 
                     } catch (SQLException e) {
                      e.printStackTrace();
                 }

    // Don't forget to close the connection when you're done
                 con.close();
                } catch (ClassNotFoundException | SQLException e) {
                      e.printStackTrace();
                }

    }//GEN-LAST:event_salesActionPerformed

    private void accoountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accoountActionPerformed
      
     boolean isTableDisplayed = false;
    
        jTabbedPane1.setSelectedIndex(2);
         
          
         if (!isTableDisplayed) {
        // Clear existing table data before displaying the table
        DefaultTableModel model = (DefaultTableModel) jTable4.getModel();
        model.setRowCount(0); // Clear existing table data

       
        // Set the flag to true since the table is now displayed
        isTableDisplayed = true;
    }
          showTableAcc();
       
    }//GEN-LAST:event_accoountActionPerformed

    private void stocksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stocksActionPerformed
        
        jTabbedPane1.setSelectedIndex(0);
         boolean isTableDisplayed = false;
          
         if (!isTableDisplayed) {
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); 
        isTableDisplayed = true;
         }
        showTableStocks();
        
    }//GEN-LAST:event_stocksActionPerformed

    private void jTextField16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField16ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField16ActionPerformed

    private void logOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutActionPerformed
        int result = JOptionPane.showConfirmDialog(this, "Do you really want to Log out?", "Confirm Log out?", JOptionPane.YES_NO_OPTION);
        if (result == JOptionPane.YES_OPTION) {
            
              vendingMachinePOS vd= new  vendingMachinePOS();
                vd.setVisible(true);
                 dispose();
        } else {
         
        }
       
    }//GEN-LAST:event_logOutActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
       DefaultTableModel tm = (DefaultTableModel)jTable1.getModel();
        String item, pName, qty,prices ;
       
        item= tm.getValueAt(jTable1.getSelectedRow(),0).toString();
        pName= tm.getValueAt(jTable1.getSelectedRow(),1).toString();
        qty= tm.getValueAt(jTable1.getSelectedRow(),2).toString();
      double price1 = Double.parseDouble(tm.getValueAt(jTable1.getSelectedRow(), 3).toString());
        
   
      
       items.setText(item);
       pname.setText(pName);
       qtys.setText(qty);
      pricess.setText(String.valueOf(price1));
       
       
    }//GEN-LAST:event_jTable1MouseClicked

    private void upActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upActionPerformed
        // Get the selected item from the JTable
            String item = items.getText();
            String pName = pname.getText();
            String qty1 = qtys.getText();
            String prc = pricess.getText();

           
            try {
         Class.forName("com.mysql.cj.jdbc.Driver");
         Connection con = DriverManager.getConnection(url, sUser, sPass);
           String updateQuery = "UPDATE stocks SET product_name = ?, qty = ?, price = ? WHERE item_num = ?";

    try (PreparedStatement pst = con.prepareStatement(updateQuery)) {
        pst.setString(1, pName); // update product_name
        pst.setString(2, qty1); // update qty
        pst.setString(3, prc);  // update price
        pst.setString(4, item); // update item_num

        int rowsAffected = pst.executeUpdate();

        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(null, "Update Successfully.");
            items.setText("");
            pname.setText("");
            qtys.setText("");
            pricess.setText("");

            // Refresh the JTable after successful update
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0); // Clear existing table data

            // Fetch updated data and repopulate the JTable
            try (PreparedStatement statement = con.prepareStatement("SELECT * FROM stocks")) {
                ResultSet resultSet = statement.executeQuery();

                while (resultSet.next()) {
                    String itemName = resultSet.getString("item_num");
                    String pNames = resultSet.getString("product_name");
                    String quantity = resultSet.getString("qty");
                  double prce = Double.parseDouble(resultSet.getString("price"));
                String fprice = String.format("%.2f", prce); 

                    model.addRow(new Object[]{itemName,pNames, quantity, fprice});
                }
            }
        } else {
            // Handle case where no rows were affected by the update
            JOptionPane.showMessageDialog(null, "Please select a row in table to update!.");
        }
    }
} catch (SQLException | ClassNotFoundException e) {
    // Handle SQL or class not found exceptions
    e.printStackTrace();
}
           

    }//GEN-LAST:event_upActionPerformed

    private void userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userActionPerformed

    private void updateMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateMActionPerformed
       String accs = acc.getText();
String ps = pass.getText();
String fn = fName.getText();
String us = user.getText();

try {
    Class.forName("com.mysql.cj.jdbc.Driver");
    Connection con = DriverManager.getConnection(url, sUser, sPass);

    // Check if the username exists
    String checkQuery = "SELECT * FROM account WHERE user_name = ?";
    try (PreparedStatement checkStatement = con.prepareStatement(checkQuery)) {
        checkStatement.setString(1, us);
        ResultSet resultSet = checkStatement.executeQuery();

        if (resultSet.next()) {
            String existingUsername = resultSet.getString("user_name");
            if (existingUsername.equals(us)) {
                // Username remains the same. Check if password or full name is updated
                String existingPassword = resultSet.getString("password");
                String existingFullName = resultSet.getString("full_name");

                boolean passwordUpdated = !existingPassword.equals(ps);
                boolean fullNameUpdated = !existingFullName.equals(fn);

                if (!passwordUpdated && !fullNameUpdated) {
                    JOptionPane.showMessageDialog(null, "No changes made.");
                    acc.setText("");
                    pass.setText("");
                    fName.setText("");
                    user.setText("");
                    return; // Exit the method
                } else {
                    String updateQuery = "UPDATE account SET password = ?, full_name = ? WHERE user_name = ?";
                    try (PreparedStatement pst = con.prepareStatement(updateQuery)) {
                        pst.setString(1, ps);
                        pst.setString(2, fn);
                        pst.setString(3, us);

                        int rowsAffected = pst.executeUpdate();

                        if (rowsAffected > 0) {
                            JOptionPane.showMessageDialog(null, " Update successfully.");
                            acc.setText("");
                            pass.setText("");
                            fName.setText("");
                            user.setText("");

                            System.out.println("Update successful");

                            // Refresh the JTable after successful update
                            DefaultTableModel model = (DefaultTableModel) jTable4.getModel();
                            model.setRowCount(0); // Clear existing table data

                            // Fetch updated data and repopulate the JTable
                            try (PreparedStatement statement = con.prepareStatement("SELECT * FROM account")) {
                                ResultSet updatedResultSet = statement.executeQuery();

                                while (updatedResultSet.next()) {
                                    String updatedAccs = updatedResultSet.getString("account_ID");
                                    String updatedUss = updatedResultSet.getString("user_name");
                                    String updatedPass = updatedResultSet.getString("password");
                                    String updatedName = updatedResultSet.getString("full_name");
                                    String updatedDate = updatedResultSet.getString("date_created");
                                    model.addRow(new Object[]{updatedAccs, updatedUss, updatedPass, updatedName, updatedDate});
                                }
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "No rows were affected by the update.");
                        }
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "Username already exists!");
                acc.setText("");
                user.setText("");
                pass.setText("");
                fName.setText("");
                return; // Exit the method
            }
        }
    }
} catch (SQLException e) {
    JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
    e.printStackTrace();
} catch (ClassNotFoundException e) {
    e.printStackTrace();
}

    }//GEN-LAST:event_updateMActionPerformed

    private void delbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delbActionPerformed
       // String accId= acc.getText();
        int result = JOptionPane.showConfirmDialog(this, "Do you really want to delete this?", "Delete row?", JOptionPane.YES_NO_OPTION);
        if (result == JOptionPane.YES_OPTION) {
            int selectedRowIndex = jTable4.getSelectedRow();
            if (selectedRowIndex != -1) { // -1 indicates no row is selected
                DefaultTableModel model = (DefaultTableModel) jTable4.getModel();
                String id = (String) model.getValueAt(selectedRowIndex, 0); // Assuming the username is in column 0

                // Remove row from the model
                model.removeRow(selectedRowIndex);

                try {
                    Class.forName("com.mysql.cj.jdbc.Driver");
                    Connection con = DriverManager.getConnection(url, sUser, sPass);

                    String deleteQuery = "DELETE FROM account WHERE account_ID= ?";
                    try (PreparedStatement pst = con.prepareStatement(deleteQuery)) {
                        pst.setString(1, id);
                        int rowsAffected = pst.executeUpdate();
                        user.setText("");
                        pass.setText("");
                        fName.setText("");
                        acc.setText("");

                        if (rowsAffected > 0) {
                            JOptionPane.showMessageDialog(null, "Row deleted successfully");
                        } else {
                            JOptionPane.showMessageDialog(null, "No rows were deleted ");
                        }
                    }
                } catch (SQLException | ClassNotFoundException e) {
                    e.printStackTrace();
                }

                // Perform any additional logic if required
            } else {
                JOptionPane.showMessageDialog(null, "Please select a row to delete.");
            }

        } else {
            // user clicked No, so do nothing
        }
    }//GEN-LAST:event_delbActionPerformed

    private void addMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMActionPerformed
        String users=user.getText();
        String passs= pass.getText();
        String fullName=fName.getText();
        String id = acc.getText();

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(url, sUser, sPass);

            try (PreparedStatement pst = con.prepareStatement("INSERT INTO account(user_name, password, full_name, date_created) VALUES (?, ?, ?,  CURRENT_DATE())")) {
                pst.setString(1, users);
                pst.setString(2,passs);
                pst.setString(3, fullName);

                try{
                    int rowsAffected = pst.executeUpdate();

                    if (rowsAffected > 0) {
                        JOptionPane.showMessageDialog(null, "Added Successfully.");
                        acc.setText("");
                        pass.setText("");
                        fName.setText("");
                        acc.setText("");
                       

                        // Refresh the JTable after successful update
                        DefaultTableModel model = (DefaultTableModel) jTable4.getModel();
                        model.setRowCount(0);

                        // Fetch updated data and repopulate the JTable
                        try (PreparedStatement statement = con.prepareStatement("SELECT * FROM account")) {
                            ResultSet resultSet = statement.executeQuery();

                            while (resultSet.next()) {
                                String ac= resultSet.getString("account_ID");
                                String  us = resultSet.getString("user_name");
                                String ps = resultSet.getString("password");
                                String fn= resultSet.getString("full_name");
                                String dt = resultSet.getString("date_created");

                                model.addRow(new Object[]{ac,us,ps,fn,dt});
                            }
                        }
                    } else {
                        // Handle case where no rows were affected by the update
                        JOptionPane.showMessageDialog(null, "Please select a row in table to update!.");
                    }

                } catch (SQLIntegrityConstraintViolationException e) {
                    // Handle the case where a duplicate entry is found (e.g., for 'admin')

                    JOptionPane.showMessageDialog(new JFrame(), "Username already exists.\n Please choose a different username."
                        , "Error", JOptionPane.ERROR_MESSAGE);
                    // Handle or log the exception as needed
                }
            }

        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(vendingMachinePOS.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addMActionPerformed

    private void jTable4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable4MouseClicked
        DefaultTableModel tb1 = (DefaultTableModel)jTable4.getModel();
        String fullName, password, users,accs;
        
        accs =tb1.getValueAt(jTable4.getSelectedRow(),0).toString();
        users= tb1.getValueAt(jTable4.getSelectedRow(),1).toString();
        password= tb1.getValueAt(jTable4.getSelectedRow(),2).toString();
        fullName= tb1.getValueAt(jTable4.getSelectedRow(),3).toString();
        
        acc.setText(accs);
       user.setText(users);
        pass.setText(password);
        fName.setText( fullName);
    }//GEN-LAST:event_jTable4MouseClicked

    private void accActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_accActionPerformed

    private void itemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_itemsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Data.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Data.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Data.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Data.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Data().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField acc;
    private javax.swing.JButton accoount;
    private javax.swing.JButton addM;
    private javax.swing.JButton delb;
    private javax.swing.JTextField fName;
    private javax.swing.JTextField items;
    private javax.swing.JButton jButton10;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JButton logOut;
    private javax.swing.JTextField pass;
    private javax.swing.JTextField pname;
    private javax.swing.JTextField pricess;
    private javax.swing.JTextField qtys;
    private javax.swing.JButton sales;
    private javax.swing.JButton stocks;
    private javax.swing.JTextField totals;
    private javax.swing.JButton up;
    private javax.swing.JButton updateM;
    private javax.swing.JTextField user;
    // End of variables declaration//GEN-END:variables
}
