package Vending;


import static Vending.DatabaseConn.mycon;
import java.util.*;
import java.awt.event.KeyEvent;
import java.sql.*;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author Mark Anthony
 */
public class vendingMachinePOS extends javax.swing.JFrame {
    
    private DefaultTableModel model;
    public ArrayList<VendingData> vd = new ArrayList<>();
    
    private String fprc(double price) {
    return String.format("%.2f", price);
}


    /**
     * Creates new form vendingMachinePOS
     */
    Connection con=null;
    ResultSet rs=null;
    PreparedStatement pst=null;
    Statement st = null;
    
    java.util.Date date = new java.util.Date();
    java.sql.Date sqlDate = new java.sql.Date(date.getTime());
    
    
    public vendingMachinePOS() {
        
         vd.add(new VendingData("1","cobra","1",25.00));
         vd.add(new VendingData("2","Coca cola (diet)","1",30.00));
         vd.add(new VendingData("3","Royal","1",30.0));
        vd.add(new VendingData("4","Rc cola","1",20));
         vd.add(new VendingData("5","Pepsi","1",30));
         vd.add(new VendingData("6","Sprite","1",30));
         vd.add(new VendingData("7","Coke","1",30));
         vd.add(new VendingData("8","Sting","1",18));
         vd.add(new VendingData("9","nature Spring","1",15));
         vd.add(new VendingData("10","Summit 1L","1",35));
         vd.add(new VendingData("11","Cobra (red)","1",20));
         vd.add(new VendingData("12","Summit","1",15));
         vd.add(new VendingData("13","Absolute","1",18));
         vd.add(new VendingData("14","c2","1",15));
         vd.add(new VendingData("15","minute maid","1",18));
         vd.add(new VendingData("16","Red Bull","1",35));
         vd.add(new VendingData("17","Zest-o","1",15));
         vd.add(new VendingData("18","Mountain Dew","1",20));
         vd.add(new VendingData("19","Gatorade Blue","1",40));
         vd.add(new VendingData("20","Gatorade Orange","1",40));
         vd.add(new VendingData("21","Gatorade Violet","1",40));
        
        initComponents();
        con=DatabaseConn.mycon();
        
       // fetchDataFromDatabase(); 
         okBut.setEnabled(false);
       Bt1.setEnabled(false);
       Bt2.setEnabled(false);
       Bt3.setEnabled(false);
       Bt4.setEnabled(false);
       Bt5.setEnabled(false);
       Bt6.setEnabled(false);
       Bt7.setEnabled(false);
       Bt8.setEnabled(false);
       Bt9.setEnabled(false);
       Bt0.setEnabled(false);
       Btclr.setEnabled(false);
        
       try {
 
     setQtyTolabel("1", cobra1);
     setQtyTolabel("2", coke);
     setQtyTolabel("11", cobrar);
     setQtyTolabel("10", summit1l);
     setQtyTolabel("3", royal);
     setQtyTolabel("7", coke2);
     setQtyTolabel("16", redbull);
     setQtyTolabel("18", mountain);
     setQtyTolabel("5",pepsi );
     setQtyTolabel("14",c2 );
     setQtyTolabel("19",gatoradeB );
     setQtyTolabel("21",gatoradeV );
     setQtyTolabel("6",sprite );
     setQtyTolabel("9",nature );
     setQtyTolabel("12",summits);
     setQtyTolabel("8",sting );
     setQtyTolabel("20",gatoradeO );
     setQtyTolabel("4",rc );
     setQtyTolabel("17",zesto );
     setQtyTolabel("15",minute);
     setQtyTolabel("9876",summit1l );
     setQtyTolabel("13", abs);
        
    
    // Ad
} catch (SQLException e) {
    e.printStackTrace();
}
    
        
    }
    
    
   
    
   /* public void Connect(){
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con= DriverManager.getConnection("jdbc:mysql://localhost/vendingmachine","root","");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(vendingMachinePOS.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(vendingMachinePOS.class.getName()).log(Level.SEVERE, null, ex);
        }
    }*/
  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        Bt6 = new javax.swing.JButton();
        Bt9 = new javax.swing.JButton();
        Bt7 = new javax.swing.JButton();
        Bt5 = new javax.swing.JButton();
        Bt2 = new javax.swing.JButton();
        Btclr = new javax.swing.JButton();
        Bt3 = new javax.swing.JButton();
        okBut = new javax.swing.JButton();
        Bt0 = new javax.swing.JButton();
        tp = new javax.swing.JTextField();
        jTxt1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        Bt8 = new javax.swing.JButton();
        Bt1 = new javax.swing.JButton();
        Bt4 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        Txtchange = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel35 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabelcoke = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabelcoke4 = new javax.swing.JLabel();
        jLabelcoke5 = new javax.swing.JLabel();
        jLabelcoke9 = new javax.swing.JLabel();
        jLabelcoke10 = new javax.swing.JLabel();
        jLabelcoke19 = new javax.swing.JLabel();
        jLabelcoke11 = new javax.swing.JLabel();
        jLabelcoke18 = new javax.swing.JLabel();
        jLabelcoke20 = new javax.swing.JLabel();
        jLabelcoke21 = new javax.swing.JLabel();
        jLabelcoke22 = new javax.swing.JLabel();
        jLabelcoke23 = new javax.swing.JLabel();
        jLabelcoke24 = new javax.swing.JLabel();
        jLabelcoke25 = new javax.swing.JLabel();
        jLabelcoke6 = new javax.swing.JLabel();
        jLabelcoke7 = new javax.swing.JLabel();
        jLabelcoke8 = new javax.swing.JLabel();
        jLabelcoke12 = new javax.swing.JLabel();
        jLabelcoke13 = new javax.swing.JLabel();
        jLabelcoke14 = new javax.swing.JLabel();
        jLabelcoke26 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        cobra = new javax.swing.JLabel();
        coke = new javax.swing.JLabel();
        coke3 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        cobra1 = new javax.swing.JLabel();
        pepsi = new javax.swing.JLabel();
        coke6 = new javax.swing.JLabel();
        royal = new javax.swing.JLabel();
        rc = new javax.swing.JLabel();
        coke7 = new javax.swing.JLabel();
        coke8 = new javax.swing.JLabel();
        coke9 = new javax.swing.JLabel();
        sprite = new javax.swing.JLabel();
        coke2 = new javax.swing.JLabel();
        coke10 = new javax.swing.JLabel();
        coke11 = new javax.swing.JLabel();
        sting = new javax.swing.JLabel();
        coke13 = new javax.swing.JLabel();
        nature = new javax.swing.JLabel();
        coke15 = new javax.swing.JLabel();
        summit1l = new javax.swing.JLabel();
        coke17 = new javax.swing.JLabel();
        cobrar = new javax.swing.JLabel();
        summits = new javax.swing.JLabel();
        coke20 = new javax.swing.JLabel();
        abs = new javax.swing.JLabel();
        coke22 = new javax.swing.JLabel();
        coke23 = new javax.swing.JLabel();
        c2 = new javax.swing.JLabel();
        minute = new javax.swing.JLabel();
        coke26 = new javax.swing.JLabel();
        coke27 = new javax.swing.JLabel();
        redbull = new javax.swing.JLabel();
        coke29 = new javax.swing.JLabel();
        zesto = new javax.swing.JLabel();
        mountain = new javax.swing.JLabel();
        coke32 = new javax.swing.JLabel();
        gatoradeB = new javax.swing.JLabel();
        coke34 = new javax.swing.JLabel();
        gatoradeO = new javax.swing.JLabel();
        coke36 = new javax.swing.JLabel();
        coke37 = new javax.swing.JLabel();
        gatoradeV = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 153, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Insert Coin");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, 79, 35));

        Bt6.setBackground(new java.awt.Color(153, 153, 153));
        Bt6.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 24)); // NOI18N
        Bt6.setText("6");
        Bt6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bt6ActionPerformed(evt);
            }
        });
        jPanel2.add(Bt6, new org.netbeans.lib.awtextra.AbsoluteConstraints(195, 338, 57, 43));

        Bt9.setBackground(new java.awt.Color(153, 153, 153));
        Bt9.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 24)); // NOI18N
        Bt9.setText("9");
        Bt9.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        Bt9.setInheritsPopupMenu(true);
        Bt9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bt9ActionPerformed(evt);
            }
        });
        jPanel2.add(Bt9, new org.netbeans.lib.awtextra.AbsoluteConstraints(195, 387, 57, 46));

        Bt7.setBackground(new java.awt.Color(153, 153, 153));
        Bt7.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 24)); // NOI18N
        Bt7.setText("7");
        Bt7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bt7ActionPerformed(evt);
            }
        });
        jPanel2.add(Bt7, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 388, 57, 43));

        Bt5.setBackground(new java.awt.Color(153, 153, 153));
        Bt5.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 24)); // NOI18N
        Bt5.setText("5");
        Bt5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bt5ActionPerformed(evt);
            }
        });
        jPanel2.add(Bt5, new org.netbeans.lib.awtextra.AbsoluteConstraints(106, 338, 57, 43));

        Bt2.setBackground(new java.awt.Color(153, 153, 153));
        Bt2.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 24)); // NOI18N
        Bt2.setText("2");
        Bt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bt2ActionPerformed(evt);
            }
        });
        jPanel2.add(Bt2, new org.netbeans.lib.awtextra.AbsoluteConstraints(106, 289, 57, 43));

        Btclr.setBackground(new java.awt.Color(153, 153, 153));
        Btclr.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 10)); // NOI18N
        Btclr.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mark Anthony\\OneDrive\\Pictures\\defe\\clear-button-572833-removebg-preview.png")); // NOI18N
        Btclr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtclrActionPerformed(evt);
            }
        });
        jPanel2.add(Btclr, new org.netbeans.lib.awtextra.AbsoluteConstraints(195, 441, 57, 43));

        Bt3.setBackground(new java.awt.Color(153, 153, 153));
        Bt3.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 24)); // NOI18N
        Bt3.setText("3");
        Bt3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bt3ActionPerformed(evt);
            }
        });
        jPanel2.add(Bt3, new org.netbeans.lib.awtextra.AbsoluteConstraints(195, 289, 57, 43));

        okBut.setBackground(new java.awt.Color(153, 153, 153));
        okBut.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        okBut.setText("Ok");
        okBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButActionPerformed(evt);
            }
        });
        jPanel2.add(okBut, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 441, 57, 43));

        Bt0.setBackground(new java.awt.Color(153, 153, 153));
        Bt0.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 24)); // NOI18N
        Bt0.setText("0");
        Bt0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bt0ActionPerformed(evt);
            }
        });
        jPanel2.add(Bt0, new org.netbeans.lib.awtextra.AbsoluteConstraints(106, 439, 57, 43));

        tp.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tp.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tpFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tpFocusLost(evt);
            }
        });
        tp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tpActionPerformed(evt);
            }
        });
        tp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tpKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tpKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tpKeyTyped(evt);
            }
        });
        jPanel2.add(tp, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, 130, 35));

        jTxt1.setEditable(false);
        jTxt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxt1ActionPerformed(evt);
            }
        });
        jPanel2.add(jTxt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 230, 115, 31));

        jLabel3.setBackground(new java.awt.Color(153, 255, 153));
        jLabel3.setFont(new java.awt.Font("Segoe UI Emoji", 1, 12)); // NOI18N
        jLabel3.setText("Selected products");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 235, -1, 31));

        Bt8.setBackground(new java.awt.Color(153, 153, 153));
        Bt8.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 24)); // NOI18N
        Bt8.setText("8");
        Bt8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bt8ActionPerformed(evt);
            }
        });
        jPanel2.add(Bt8, new org.netbeans.lib.awtextra.AbsoluteConstraints(106, 388, 57, 43));

        Bt1.setBackground(new java.awt.Color(153, 153, 153));
        Bt1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 24)); // NOI18N
        Bt1.setText("1");
        Bt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bt1ActionPerformed(evt);
            }
        });
        jPanel2.add(Bt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 289, 57, 43));

        Bt4.setBackground(new java.awt.Color(153, 153, 153));
        Bt4.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 24)); // NOI18N
        Bt4.setText("4");
        Bt4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Bt4ActionPerformed(evt);
            }
        });
        jPanel2.add(Bt4, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 338, 57, 43));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("EXIT");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 620, 240, 50));

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton3.setText("Admin Log In");
        jButton3.setPreferredSize(new java.awt.Dimension(72, 23));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 560, 240, 50));

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setText("Reset");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 500, 240, 50));

        Txtchange.setEditable(false);
        Txtchange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtchangeActionPerformed(evt);
            }
        });
        jPanel2.add(Txtchange, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 180, 115, 30));

        jLabel6.setFont(new java.awt.Font("Segoe UI Emoji", 1, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Change");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, 61, 40));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item_no", "Product", "Price"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 240, 60));

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel35.setText("Insert Coin");
        jPanel2.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, 120, 40));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 0, 260, 680));

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 204)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("7");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 10, 30, 30));

        jLabelcoke.setBackground(new java.awt.Color(255, 255, 255));
        jLabelcoke.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabelcoke.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mark Anthony\\OneDrive\\Documents\\OOP\\VendingMachine\\src\\images\\cobra.png")); // NOI18N
        jLabelcoke.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));
        jPanel1.add(jLabelcoke, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 130, 190));

        jLabel7.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("8");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, 30, 30));

        jLabelcoke4.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mark Anthony\\OneDrive\\Pictures\\def.png")); // NOI18N
        jLabelcoke4.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));
        jPanel1.add(jLabelcoke4, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 130, 190));

        jLabelcoke5.setBackground(new java.awt.Color(255, 255, 255));
        jLabelcoke5.setForeground(new java.awt.Color(255, 255, 255));
        jLabelcoke5.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mark Anthony\\OneDrive\\Documents\\OOP\\VendingMachine\\src\\images\\royal.png")); // NOI18N
        jLabelcoke5.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));
        jPanel1.add(jLabelcoke5, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 10, 130, 190));

        jLabelcoke9.setBackground(new java.awt.Color(255, 255, 255));
        jLabelcoke9.setForeground(new java.awt.Color(255, 255, 255));
        jLabelcoke9.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mark Anthony\\OneDrive\\Documents\\OOP\\VendingMachine\\src\\images\\rc.png")); // NOI18N
        jLabelcoke9.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));
        jPanel1.add(jLabelcoke9, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 10, -1, 190));

        jLabelcoke10.setBackground(new java.awt.Color(255, 255, 255));
        jLabelcoke10.setForeground(new java.awt.Color(255, 255, 255));
        jLabelcoke10.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mark Anthony\\OneDrive\\Documents\\OOP\\VendingMachine\\src\\images\\pepsi1.png")); // NOI18N
        jLabelcoke10.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, java.awt.Color.white, java.awt.Color.white));
        jPanel1.add(jLabelcoke10, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 10, 130, 190));

        jLabelcoke19.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mark Anthony\\OneDrive\\Documents\\OOP\\VendingMachine\\src\\images\\png-transparent-orange-juice-coconut-water-punch-minute-maid-juice-natural-foods-food-orange-thumbnail-removebg-preview.png")); // NOI18N
        jLabelcoke19.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));
        jLabelcoke19.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jPanel1.add(jLabelcoke19, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 480, 130, 190));

        jLabelcoke11.setBackground(new java.awt.Color(255, 255, 255));
        jLabelcoke11.setForeground(new java.awt.Color(255, 255, 255));
        jLabelcoke11.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mark Anthony\\OneDrive\\Documents\\OOP\\VendingMachine\\src\\images\\sprite1.png")); // NOI18N
        jLabelcoke11.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));
        jPanel1.add(jLabelcoke11, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 10, 130, 190));

        jLabelcoke18.setBackground(new java.awt.Color(255, 255, 255));
        jLabelcoke18.setForeground(new java.awt.Color(255, 255, 255));
        jLabelcoke18.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mark Anthony\\OneDrive\\Documents\\OOP\\VendingMachine\\src\\images\\coke.png")); // NOI18N
        jLabelcoke18.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(255, 255, 255), java.awt.Color.white));
        jPanel1.add(jLabelcoke18, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 10, 130, 190));

        jLabelcoke20.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mark Anthony\\OneDrive\\Pictures\\defe\\redbull.png")); // NOI18N
        jLabelcoke20.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));
        jPanel1.add(jLabelcoke20, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 480, 130, 190));

        jLabelcoke21.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mark Anthony\\OneDrive\\Pictures\\defe\\zest.png")); // NOI18N
        jLabelcoke21.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));
        jPanel1.add(jLabelcoke21, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 480, 130, 190));

        jLabelcoke22.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mark Anthony\\OneDrive\\Documents\\OOP\\VendingMachine\\src\\images\\mountaindew1.png")); // NOI18N
        jLabelcoke22.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));
        jPanel1.add(jLabelcoke22, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 480, 130, 190));

        jLabelcoke23.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mark Anthony\\OneDrive\\Documents\\OOP\\VendingMachine\\src\\images\\gatorade bl.png")); // NOI18N
        jLabelcoke23.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));
        jPanel1.add(jLabelcoke23, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 480, 130, 190));

        jLabelcoke24.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mark Anthony\\OneDrive\\Documents\\OOP\\VendingMachine\\src\\images\\gatorade ornge.png")); // NOI18N
        jLabelcoke24.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));
        jPanel1.add(jLabelcoke24, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 480, 130, 190));

        jLabelcoke25.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mark Anthony\\OneDrive\\Documents\\OOP\\VendingMachine\\src\\images\\gatorade violet.png")); // NOI18N
        jLabelcoke25.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));
        jPanel1.add(jLabelcoke25, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 480, 130, 190));

        jLabelcoke6.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mark Anthony\\OneDrive\\Documents\\OOP\\VendingMachine\\src\\images\\sting.png")); // NOI18N
        jLabelcoke6.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));
        jPanel1.add(jLabelcoke6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, 130, 190));

        jLabelcoke7.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mark Anthony\\OneDrive\\Documents\\OOP\\VendingMachine\\src\\images\\natures spring 500ml.png")); // NOI18N
        jLabelcoke7.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));
        jPanel1.add(jLabelcoke7, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 250, 130, 190));

        jLabelcoke8.setBackground(new java.awt.Color(204, 255, 255));
        jLabelcoke8.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mark Anthony\\OneDrive\\Documents\\OOP\\VendingMachine\\src\\images\\summit 1l1.png")); // NOI18N
        jLabelcoke8.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));
        jPanel1.add(jLabelcoke8, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 250, 130, 190));

        jLabelcoke12.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mark Anthony\\OneDrive\\Documents\\OOP\\VendingMachine\\src\\images\\cobra red.png")); // NOI18N
        jLabelcoke12.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));
        jPanel1.add(jLabelcoke12, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 250, 130, 190));

        jLabelcoke13.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mark Anthony\\OneDrive\\Documents\\OOP\\VendingMachine\\src\\images\\summit 350ml.png")); // NOI18N
        jLabelcoke13.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED, java.awt.Color.white, java.awt.Color.white));
        jPanel1.add(jLabelcoke13, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 250, 130, 190));

        jLabelcoke14.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mark Anthony\\OneDrive\\Documents\\OOP\\VendingMachine\\src\\images\\absolute 350.png")); // NOI18N
        jLabelcoke14.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));
        jPanel1.add(jLabelcoke14, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 250, 130, 190));

        jLabelcoke26.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mark Anthony\\OneDrive\\Documents\\OOP\\VendingMachine\\src\\images\\c2.png")); // NOI18N
        jLabelcoke26.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));
        jPanel1.add(jLabelcoke26, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 250, 130, 190));

        jLabel5.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("2");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, 30, 30));

        jLabel9.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("4");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 10, 30, 30));

        jLabel10.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("5");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 10, 30, 30));

        jLabel11.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("6");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 10, 30, 30));

        jLabel8.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("3");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 10, 30, 30));

        jLabel12.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("₱ 20.00");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 160, 60, 20));

        jLabel13.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("₱ 30.00");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 160, 50, 20));

        jLabel14.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("₱ 20.00");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 160, 50, 20));

        jLabel15.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("₱ 30.00");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 160, 130, 20));

        jLabel16.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("₱ 30.00");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 160, 60, 20));

        jLabel17.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("₱ 18.00");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 400, 50, 20));

        jLabel18.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("₱ 30.00");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 160, 130, 20));

        jLabel19.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("₱ 18.00");
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 400, 60, 20));

        jLabel20.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("1");
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 10, 30, 30));

        jLabel21.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("9");
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 250, 30, 30));

        jLabel22.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("₱ 15.00");
        jPanel1.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 400, 50, 20));

        jLabel23.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("₱ 35.00");
        jPanel1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 400, 50, 20));

        jLabel24.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("10");
        jPanel1.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 250, 30, 30));

        jLabel25.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("₱ 20.00");
        jPanel1.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 400, 50, 20));

        jLabel26.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("11");
        jPanel1.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 250, 30, 30));

        jLabel27.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("₱ 15.00");
        jPanel1.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 400, 60, 20));

        jLabel28.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setText("12");
        jPanel1.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 250, 30, 30));

        jLabel29.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel29.setText("₱ 18.00");
        jPanel1.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 630, 60, 20));

        jLabel30.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setText("₱ 15.00");
        jPanel1.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 400, 60, 20));

        jLabel31.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel31.setText("15");
        jPanel1.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 480, 30, 30));

        jLabel32.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel32.setText("13");
        jPanel1.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 250, 30, 30));

        jLabel33.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel33.setText("14");
        jPanel1.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 250, 30, 30));

        jLabel37.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel37.setText("16");
        jPanel1.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 480, 30, 30));

        jLabel38.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel38.setText("₱ 35.00");
        jPanel1.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 630, 60, 20));

        jLabel39.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel39.setText("₱ 15.00");
        jPanel1.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 630, 60, 20));

        jLabel40.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel40.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel40.setText("17");
        jPanel1.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 480, 30, 30));

        jLabel41.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel41.setText("₱ 20.00");
        jPanel1.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 630, 60, 20));

        jLabel42.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel42.setText("21");
        jPanel1.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 480, 30, 30));

        jLabel43.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel43.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel43.setText("17");
        jPanel1.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 480, 30, 30));

        jLabel44.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel44.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel44.setText("₱ 40.00");
        jPanel1.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 630, 60, 20));

        jLabel46.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel46.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel46.setText("18");
        jPanel1.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 480, 30, 30));

        jLabel47.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel47.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel47.setText("19");
        jPanel1.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 480, 30, 30));

        jLabel48.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel48.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel48.setText("20");
        jPanel1.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 480, 30, 30));

        jLabel49.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel49.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel49.setText("₱ 40.00");
        jPanel1.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 630, 60, 20));

        jLabel50.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel50.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel50.setText("₱ 40.00");
        jPanel1.add(jLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 630, 60, 20));

        cobra.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        cobra.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cobra.setText("Stocks:");
        jPanel1.add(cobra, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, 60, 20));

        coke.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        coke.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        coke.setText("0");
        jPanel1.add(coke, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 180, 30, -1));

        coke3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        coke3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        coke3.setText("Stocks:");
        jPanel1.add(coke3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 180, 60, 20));

        jLabel34.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel34.setText("₱ 30.00");
        jPanel1.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 160, 60, 20));

        cobra1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        cobra1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        cobra1.setText("0");
        jPanel1.add(cobra1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 180, 30, -1));

        pepsi.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        pepsi.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        pepsi.setText("0");
        jPanel1.add(pepsi, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 180, 40, -1));

        coke6.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        coke6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        coke6.setText("Stocks:");
        jPanel1.add(coke6, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 180, 50, 20));

        royal.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        royal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        royal.setText("0");
        jPanel1.add(royal, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 180, 30, -1));

        rc.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        rc.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rc.setText("0");
        jPanel1.add(rc, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 180, 30, -1));

        coke7.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        coke7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        coke7.setText("Stocks:");
        jPanel1.add(coke7, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 180, 50, 20));

        coke8.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        coke8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        coke8.setText("Stocks:");
        jPanel1.add(coke8, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 180, 70, 20));

        coke9.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        coke9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        coke9.setText("Stocks:");
        jPanel1.add(coke9, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 180, 50, 20));

        sprite.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        sprite.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        sprite.setText("0");
        jPanel1.add(sprite, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 180, 30, -1));

        coke2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        coke2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        coke2.setText("0");
        jPanel1.add(coke2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 180, -1, -1));

        coke10.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        coke10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        coke10.setText("Stocks:");
        jPanel1.add(coke10, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 180, -1, 20));

        coke11.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        coke11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        coke11.setText("Stocks:");
        jPanel1.add(coke11, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 420, 60, 20));

        sting.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        sting.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        sting.setText("0");
        jPanel1.add(sting, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 420, -1, -1));

        coke13.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        coke13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        coke13.setText("Stocks:");
        jPanel1.add(coke13, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 420, -1, 20));

        nature.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        nature.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        nature.setText("0");
        jPanel1.add(nature, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 420, -1, -1));

        coke15.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        coke15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        coke15.setText("Stocks:");
        jPanel1.add(coke15, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 420, -1, 20));

        summit1l.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        summit1l.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        summit1l.setText("0");
        jPanel1.add(summit1l, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 420, -1, -1));

        coke17.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        coke17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        coke17.setText("Stocks:");
        jPanel1.add(coke17, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 420, -1, 20));

        cobrar.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        cobrar.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        cobrar.setText("0");
        jPanel1.add(cobrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 420, -1, -1));

        summits.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        summits.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        summits.setText("0");
        jPanel1.add(summits, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 420, -1, -1));

        coke20.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        coke20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        coke20.setText("Stocks:");
        jPanel1.add(coke20, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 420, -1, 20));

        abs.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        abs.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        abs.setText("0");
        jPanel1.add(abs, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 420, -1, -1));

        coke22.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        coke22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        coke22.setText("Stocks:");
        jPanel1.add(coke22, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 420, -1, 20));

        coke23.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        coke23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        coke23.setText("Stocks:");
        jPanel1.add(coke23, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 420, -1, 20));

        c2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        c2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        c2.setText("0");
        jPanel1.add(c2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 420, -1, -1));

        minute.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        minute.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        minute.setText("0");
        jPanel1.add(minute, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 650, -1, -1));

        coke26.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        coke26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        coke26.setText("Stocks:");
        jPanel1.add(coke26, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 650, -1, 20));

        coke27.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        coke27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        coke27.setText("Stocks:");
        jPanel1.add(coke27, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 650, -1, 20));

        redbull.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        redbull.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        redbull.setText("0");
        jPanel1.add(redbull, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 650, -1, -1));

        coke29.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        coke29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        coke29.setText("Stocks:");
        jPanel1.add(coke29, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 650, -1, 20));

        zesto.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        zesto.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        zesto.setText("0");
        jPanel1.add(zesto, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 650, -1, -1));

        mountain.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        mountain.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        mountain.setText("0");
        jPanel1.add(mountain, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 650, -1, -1));

        coke32.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        coke32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        coke32.setText("Stocks:");
        jPanel1.add(coke32, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 650, -1, 20));

        gatoradeB.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        gatoradeB.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        gatoradeB.setText("0");
        jPanel1.add(gatoradeB, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 650, -1, -1));

        coke34.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        coke34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        coke34.setText("Stocks:");
        jPanel1.add(coke34, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 650, -1, 20));

        gatoradeO.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        gatoradeO.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        gatoradeO.setText("0");
        jPanel1.add(gatoradeO, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 650, -1, -1));

        coke36.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        coke36.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        coke36.setText("Stocks:");
        jPanel1.add(coke36, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 650, -1, 20));

        coke37.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        coke37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        coke37.setText("Stocks:");
        jPanel1.add(coke37, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 650, -1, 20));

        gatoradeV.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        gatoradeV.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        gatoradeV.setText("0");
        jPanel1.add(gatoradeV, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 650, -1, -1));

        jScrollPane2.setViewportView(jPanel1);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 1110, 580));

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 48)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("SMART REFRESHMENT'S VENDING MACHINE");
        jLabel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 1110, 80));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    public void showTableStocks(){
        try{
            String sql= "SELECT * FROM sales ORDER BY Item_num";
            
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery();
            DefaultTableModel model= (DefaultTableModel) jTable1.getModel();
            while(rs.next()){
                model.addRow(new String[]{ rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)});
            }
            
        }catch(Exception e){
                
                }
    }
    
    private void setQtyTolabel(String productID,JLabel label) throws SQLException {
    String url = "jdbc:mysql://localhost:3306/vendingmachine1";
    String sUser = "root";
    String sPass = "";
    
    try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        con = DriverManager.getConnection(url, sUser, sPass);
        st = con.createStatement();

        // Execute query to fetch the quantity for a specific product_ID
        String query = "SELECT qty FROM stocks WHERE Item_num = '" + productID + "'";
        rs = st.executeQuery(query);

        // Set the quantity to the specified text field
        if (rs.next()) {
            String qty = rs.getString("qty");
           label.setText(qty);  // Set the quantity to the text field
        }
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(vendingMachinePOS.class.getName()).log(Level.SEVERE, null, ex);
    } finally {
        // Close the resources
        try {
            if (rs != null) rs.close();
            if (st != null) st.close();
            if (con != null) con.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
    private void tpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tpActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_tpActionPerformed

    private void Bt5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bt5ActionPerformed
         String enterNum = jTxt1.getText();
      
      if(enterNum==""){
          jTxt1.setText(Bt1.getText());
          
      }else{
          enterNum = jTxt1.getText()+ Bt5.getText();
         jTxt1.setText(enterNum);
      }
    }//GEN-LAST:event_Bt5ActionPerformed

    private void jTxt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxt1ActionPerformed
        
             
            
        
    }//GEN-LAST:event_jTxt1ActionPerformed

    private void Bt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bt1ActionPerformed
      String enterNum = jTxt1.getText();
      
      if(enterNum==""){
          jTxt1.setText(Bt1.getText());
          
      }else{
          enterNum = jTxt1.getText()+ Bt1.getText();
         jTxt1.setText(enterNum);
      }
         
    }//GEN-LAST:event_Bt1ActionPerformed

    private void BtclrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtclrActionPerformed
       jTxt1.setText("");
    }//GEN-LAST:event_BtclrActionPerformed

    private void Bt2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bt2ActionPerformed
        // TODO add your handling code here:
         String enterNum = jTxt1.getText();
      
      if(enterNum==""){
          jTxt1.setText(Bt1.getText());
          
      }else{
          enterNum = jTxt1.getText()+ Bt2.getText();
         jTxt1.setText(enterNum);
      }
    }//GEN-LAST:event_Bt2ActionPerformed

    private void Bt3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bt3ActionPerformed
         String enterNum = jTxt1.getText();
      
      if(enterNum==""){
          jTxt1.setText(Bt1.getText());
          
      }else{
          enterNum = jTxt1.getText()+ Bt3.getText();
         jTxt1.setText(enterNum);
      }
    }//GEN-LAST:event_Bt3ActionPerformed

    private void Bt4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bt4ActionPerformed
        String enterNum = jTxt1.getText();
      
      if(enterNum==""){
          jTxt1.setText(Bt1.getText());
          
      }else{
          enterNum = jTxt1.getText()+ Bt4.getText();
         jTxt1.setText(enterNum);
      }
    }//GEN-LAST:event_Bt4ActionPerformed

    private void Bt6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bt6ActionPerformed
        String enterNum = jTxt1.getText();
      
      if(enterNum==""){
          jTxt1.setText(Bt1.getText());
          
      }else{
          enterNum = jTxt1.getText()+ Bt6.getText();
         jTxt1.setText(enterNum);
      }
    }//GEN-LAST:event_Bt6ActionPerformed

    private void Bt7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bt7ActionPerformed
         String enterNum = jTxt1.getText();
      
      if(enterNum==""){
          jTxt1.setText(Bt1.getText());
          
      }else{
          enterNum = jTxt1.getText()+ Bt7.getText();
         jTxt1.setText(enterNum);
      }
    }//GEN-LAST:event_Bt7ActionPerformed

    private void Bt8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bt8ActionPerformed
        String enterNum = jTxt1.getText();
      
      if(enterNum==""){
          jTxt1.setText(Bt1.getText());
          
      }else{
          enterNum = jTxt1.getText()+ Bt8.getText();
         jTxt1.setText(enterNum);
      }
    }//GEN-LAST:event_Bt8ActionPerformed

    private void Bt9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bt9ActionPerformed
        String enterNum = jTxt1.getText();
      
      if(enterNum==""){
          jTxt1.setText(Bt1.getText());
          
      }else{
          enterNum = jTxt1.getText()+ Bt9.getText();
         jTxt1.setText(enterNum);
      }
    }//GEN-LAST:event_Bt9ActionPerformed

    private void Bt0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Bt0ActionPerformed
         String enterNum = jTxt1.getText();
      
      if(enterNum==""){
          jTxt1.setText(Bt1.getText());
          
      }else{
          enterNum = jTxt1.getText()+ Bt0.getText();
         jTxt1.setText(enterNum);
      }
    }//GEN-LAST:event_Bt0ActionPerformed
/*Method to fetch product details based on itemNum
public ResultSet getProductDetails(String itemNum) throws SQLException {
    pst = con.prepareStatement("SELECT item_num, product_name, qty FROM stocks WHERE Item_num= ?");
    pst.setString(1, itemNum);
    return pst.executeQuery();
}

// Method to process a sale
public void processSale(String itemNum, int quantityToSell, String price) throws SQLException {
    ResultSet rs = getProductDetails(itemNum);

    if (rs.next()) {
        itemNum = rs.getString("Item_num");
        String productName = rs.getString("product_name");
        int availableQuantity = rs.getInt("qty");

        if (availableQuantity >= quantityToSell) {
            // Insert sale details into the 'sales' table
            pst = con.prepareStatement("INSERT INTO sales(item_num, product_name, qty, price, date) VALUES (?, ?, ?, ?, ?)");
            pst.setString(1, itemNum);
            pst.setString(2, productName);
            pst.setInt(3, quantityToSell);
            pst.setString(4, price);

            java.util.Date date = new java.util.Date();
            java.sql.Date sqlDate = new java.sql.Date(date.getTime()); // Get the current date in SQL format
            pst.setDate(5, sqlDate);

            pst.executeUpdate();

            // Deduct the sold quantity from the 'stocks' table
            pst = con.prepareStatement("UPDATE stocks SET qty = qty - ? WHERE Item_num = ?");
            pst.setInt(1, quantityToSell);
            pst.setString(2, itemNum);

            pst.executeUpdate();
        } else {
            // Handle insufficient quantity scenario
            // Notify the user that there isn't enough stock for this purchase
        }
    } else {
        // Handle scenario where the selected product doesn't exist in stocks
        // Notify the user about the unavailability of the selected product
    }
}

// Example usage:
/*String itemNum = "7"; // Assuming the user selected product with item number 7
int quantityToSell = 1; // Quantity purchased by the user
String price = "30"; // Price of the product

try {
    processSale(itemNum, quantityToSell, price);
} catch (SQLException e) {
    e.printStackTrace(); // Handle database errors appropriately
}**/
private int purchaseProduct(VendingData vd,double money) {
    int updatedStock = 0;
        String url = "jdbc:mysql://localhost:3306/vendingmachine1";
        String sUser = "root";
        String sPass = "";

        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection(url, sUser, sPass);

            PreparedStatement pst = con.prepareStatement("SELECT qty FROM stocks WHERE Item_num = ?");
            pst.setString(1, vd.getItemNum());
            ResultSet rs = pst.executeQuery();

            int currentStock = 0;
            if (rs.next()) {
                currentStock = rs.getInt("qty");
                int soldQuantity = Integer.parseInt(vd.getQty());
                currentStock -= soldQuantity;

                // Check if the current stock is sufficient for the purchase
                if (currentStock < 0) {
                    JOptionPane.showMessageDialog(this, "Not enough stocks available!");
                    return -1; // Return -1 to indicate not enough stocks
                }
            }

            // Proceed with the purchase if enough stock is available
            try (PreparedStatement purchaseStatement = con.prepareStatement("INSERT INTO sale(Item_num, product_name, qty, price, money, `change`, date) VALUES (?, ?, ?, ?, ?, ?, CURRENT_DATE())")) {
                purchaseStatement.setString(1, vd.getItemNum());
                purchaseStatement.setString(2, vd.getPname());
                purchaseStatement.setString(3, vd.getQty());
                purchaseStatement.setDouble(4, vd.getPrice());
                purchaseStatement.setDouble(5, money);
                purchaseStatement.setDouble(6, money - vd.getPrice());
                purchaseStatement.executeUpdate();
            } catch (SQLException ex) {
                // Handle the SQL exception
                ex.printStackTrace();
                return 0; // Return 0 to indicate failure
            }

            // Update the stock in the database for the specified product
          try (PreparedStatement updateStatement = con.prepareStatement("UPDATE stocks SET qty = ? WHERE Item_num = ?")) {
                 updateStatement.setInt(1, currentStock);
                 updateStatement.setString(2, vd.getItemNum());
                 updateStatement.executeUpdate();
              
            } catch (SQLException ex) {
                ex.printStackTrace();
                System.err.println("Failed to update stock for Item_num: " + vd.getItemNum());
                  return 0; // Return 0 to indicate failure
            }

            JOptionPane.showMessageDialog(this, "Successfully Purchased!\nThank you!");
            updatedStock = currentStock; // Update with the current stock after the purchase
            okBut.setEnabled(false);

                 } catch (ClassNotFoundException | SQLException ex) {
                     ex.printStackTrace();
                     updatedStock = -1; // 
                }

              return updatedStock; // Return the updated stock count or an error code
    }

 /* setQtyTolabel("1", cobra1);
     setQtyTolabel("2", coke);
     setQtyTolabel("11", cobrar);
     setQtyTolabel("10", summit1l);
     setQtyTolabel("3", royal);
     setQtyTolabel("7", coke2);
     setQtyTolabel("16", redbull);
     setQtyTolabel("18", mountain);
     setQtyTolabel("5",pepsi );
     setQtyTolabel("14",c2 );
     setQtyTolabel("19",gatoradeB );
     setQtyTolabel("21",gatoradeV );
     setQtyTolabel("6",sprite );
     setQtyTolabel("9",nature );
     setQtyTolabel("12",summits);
     setQtyTolabel("8",sting );
     setQtyTolabel("20",gatoradeO );
     setQtyTolabel("4",rc );
     setQtyTolabel("17",zesto );
     setQtyTolabel("15",minute);
     setQtyTolabel("9876",summit1l );
     setQtyTolabel("13", abs);*/
    
   /* private int purchaseProduct(VendingData vd, double money) {
    int updatedStock = 0;
    String url = "jdbc:mysql://localhost:3306/vendingmachine1";
    String sUser = "root";
    String sPass = "";

    try (Connection con = DriverManager.getConnection(url, sUser, sPass)) {
        con.setAutoCommit(false); // Start transaction

        // Purchase logic for the current product
        try (PreparedStatement pst = con.prepareStatement("INSERT INTO sale(Item_num, product_name, qty, price, money, change_amo, date) VALUES (?, ?, ?, ?, ?, ?, CURRENT_DATE())")) {
            pst.setString(1, vd.getItemNum());
            pst.setString(2, vd.getPname());
            pst.setString(3, vd.getQty());
            pst.setDouble(4, vd.getPrice());
            pst.setDouble(5, money);
            pst.setDouble(6, money - vd.getPrice());
            pst.executeUpdate();
        }

        // Update stock in the database for the specified product
        try (PreparedStatement pst = con.prepareStatement("UPDATE stocks SET qty = qty - ? WHERE Item_num = ?")) {
            pst.setString(1, vd.getQty());
            pst.setString(2, vd.getItemNum());
            pst.executeUpdate();
        }

        // Fetch the updated stock from the database after the purchase
        try (PreparedStatement pst = con.prepareStatement("SELECT qty FROM stocks WHERE Item_num = ?")) {
            pst.setString(1, vd.getItemNum());
            try (ResultSet rs = pst.executeQuery()) {
                if (rs.next()) {
                    updatedStock = rs.getInt("qty");
                }
            }
        }

        con.commit(); // Commit transaction
        JOptionPane.showMessageDialog(null, "Successfully Purchased!\nThank you!");
    } catch (SQLException ex) {
        // Rollback transaction if an exception occurs
        try {
            con.rollback();
        } catch (SQLException rollbackEx) {
            // Handle rollback exception
            rollbackEx.printStackTrace();
        }
        ex.printStackTrace();
    }
    return updatedStock;
}
*/
    private void okButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButActionPerformed
     
             double money = Double.parseDouble(tp.getText());
            boolean insufficientAmount = false;

           for (VendingData item : vd) {
              if (money <= item.getPrice()) {
                     JOptionPane.showMessageDialog(null, "Insufficient amount entered!", "Error", JOptionPane.ERROR_MESSAGE);
                        insufficientAmount = true;
                 break; 
                 }
               }
               if (!insufficientAmount) {
               if (money <= 0) {
                  JOptionPane.showMessageDialog(null, "Insufficient amount entered!", "Error", JOptionPane.ERROR_MESSAGE);
               } else if (money >= 1001) {
                   JOptionPane.showMessageDialog(null, "We're sorry, but our system is only able to accept values below ₱1000.\nPlease enter a value that is equal to or less than ₱1000.", "Error", JOptionPane.ERROR_MESSAGE);
               } else {
                     String selection = jTxt1.getText();
                    VendingData data = null;
                    
                     model = (DefaultTableModel) jTable1.getModel();
   
                switch (selection) {
                    case "1":
                        data = vd.get(0);
                      
                         int purchasedStock = purchaseProduct(data, money);
                         if (purchasedStock >0) {
                         cobra1.setText(Integer.toString(purchasedStock));
                         model.addRow(new Object[]{data.getItemNum(), data.getPname(), data.getPrice()});
                         // Display change only if the purchase was successful
                         Txtchange.setText(Double.toString(money - data.getPrice()));
                         }else {
                        // If purchase failed due to insufficient stock, clear the change field
                          Txtchange.setText("");
                          }
                        break;
                        
                    case "2":
                        data = vd.get(1);
                         int purchasedStock1 = purchaseProduct(data, money);
                         if (purchasedStock1 >0) {
                        coke.setText(Integer.toString(purchasedStock1));
                        Txtchange.setText(Double.toString(money - data.getPrice()));
                         model.addRow(new Object[]{data.getItemNum(), data.getPname(), fprc(data.getPrice())});
                         }else {
                         Txtchange.setText("");
                        }
                        break;
                        
                    case "3":
                        data = vd.get(2);
                        int purchasedStock2 = purchaseProduct(data, money);
                        if (purchasedStock2 >0) {
                        royal.setText(Integer.toString(purchasedStock2));
                        Txtchange.setText(Double.toString(money - data.getPrice()));
                         model.addRow(new Object[]{data.getItemNum(), data.getPname(),  fprc(data.getPrice())});
                         }else {
                         Txtchange.setText("");
                        }
                         break;
                        
                    case "4":
                        data = vd.get(3);
                          int purchasedStock3 = purchaseProduct(data, money);
                         if (purchasedStock3 >0) {
                        rc.setText(Integer.toString(purchasedStock3));
                        Txtchange.setText(Double.toString(money - data.getPrice()));
                         model.addRow(new Object[]{data.getItemNum(), data.getPname(), fprc(data.getPrice())});
                          }else {
                         Txtchange.setText("");
                        }
                         
                        break;
                        
                    case "5":
                        data = vd.get(4);
                         int purchasedStock4 = purchaseProduct(data, money);
                         if (purchasedStock4 >0) {
                        pepsi.setText(Integer.toString(purchasedStock4));
                        Txtchange.setText(Double.toString(money - data.getPrice()));
                         model.addRow(new Object[]{data.getItemNum(), data.getPname(),  fprc(data.getPrice())});
                         }else {
                         Txtchange.setText("");
                        }
                         break;
                        
                    case "6":
                        data = vd.get(5);
                        int purchasedStock5 = purchaseProduct(data, money);
                        if (purchasedStock5 >0) {
                        sprite.setText(Integer.toString(purchasedStock5));
                        Txtchange.setText(Double.toString(money - data.getPrice()));
                         model.addRow(new Object[]{data.getItemNum(), data.getPname(),  fprc(data.getPrice())});
                        }else {
                         Txtchange.setText("");
                        }
                         break;
                         
                    case "7":
                        data = vd.get(6);
                        int purchasedStock6 = purchaseProduct(data, money);
                        if (purchasedStock6 >0) {
                        coke2.setText(Integer.toString(purchasedStock6));
                        Txtchange.setText(Double.toString(money - data.getPrice()));
                         model.addRow(new Object[]{data.getItemNum(), data.getPname(), fprc(data.getPrice())});
                        }else {
                         Txtchange.setText("");
                        }
                         break;
                         
                    case "8":
                        data = vd.get(7);
                          int purchasedStock7 = purchaseProduct(data, money);
                         if (purchasedStock7 >0) {
                        sting.setText(Integer.toString(purchasedStock7));
                        Txtchange.setText(Double.toString(money - data.getPrice()));
                         model.addRow(new Object[]{data.getItemNum(), data.getPname(),  fprc(data.getPrice())});
                         }else {
                         Txtchange.setText("");
                        }
                         break;
                        
                    case "9":
                        data = vd.get(8);
                          int purchasedStock8 = purchaseProduct(data, money);
                         if (purchasedStock8 >0) {
                        nature.setText(Integer.toString(purchasedStock8));
                        Txtchange.setText(Double.toString(money - data.getPrice()));
                         model.addRow(new Object[]{data.getItemNum(), data.getPname(), fprc(data.getPrice())});
                        }else {
                         Txtchange.setText("");
                        }
                         break;
                         
                    case "10":
                        data = vd.get(9);
                          int purchasedStock9 = purchaseProduct(data, money);
                         if (purchasedStock9 >0) {
                        summit1l.setText(Integer.toString(purchasedStock9));
                        Txtchange.setText(Double.toString(money - data.getPrice()));
                        model.addRow(new Object[]{data.getItemNum(), data.getPname(),  fprc(data.getPrice())});;
                        }else {
                         Txtchange.setText("");
                        }
                        break;
                        
                    case "11":
                        data = vd.get(10);
                          int purchasedStock10 = purchaseProduct(data, money);
                         if (purchasedStock10 >0) {
                        cobrar.setText(Integer.toString(purchasedStock10));
                        Txtchange.setText(Double.toString(money - data.getPrice()));
                         model.addRow(new Object[]{data.getItemNum(), data.getPname(),  fprc(data.getPrice())});
                         }else {
                         Txtchange.setText("");
                        }
                         break;
                        
                    case "12":
                        data = vd.get(11);  
                        int purchasedStock11 = purchaseProduct(data, money);
                         if (purchasedStock11 >0) {
                        summits.setText(Integer.toString(purchasedStock11));
                        Txtchange.setText(Double.toString(money - data.getPrice()));
                         model.addRow(new Object[]{data.getItemNum(), data.getPname(),  fprc(data.getPrice())});
                         }else {
                         Txtchange.setText("");
                        }
                         break;
                        
                    case "13":
                        data = vd.get(12);
                          int purchasedStock12 = purchaseProduct(data, money);
                         if (purchasedStock12 >0) {
                        abs.setText(Integer.toString(purchasedStock12));
                        Txtchange.setText(Double.toString(money - data.getPrice()));
                         model.addRow(new Object[]{data.getItemNum(), data.getPname(), fprc(data.getPrice())});
                        }else {
                         Txtchange.setText("");
                        }
                         break;
                        
                    case "14":
                        data = vd.get(13);
                          int purchasedStock13 = purchaseProduct(data, money);
                         if (purchasedStock13 >0) {
                        c2.setText(Integer.toString(purchasedStock13));
                        Txtchange.setText(Double.toString(money - data.getPrice()));
                         model.addRow(new Object[]{data.getItemNum(), data.getPname(),  fprc(data.getPrice())});
                         }else {
                         Txtchange.setText("");
                        }
                         break;
                         
                    case "15":
                        data = vd.get(14);
                          int purchasedStock14 = purchaseProduct(data, money);
                         if (purchasedStock14 >0) {
                        minute.setText(Integer.toString(purchasedStock14));
                        Txtchange.setText(Double.toString(money - data.getPrice()));
                         model.addRow(new Object[]{data.getItemNum(), data.getPname(), fprc(data.getPrice())});
                         }else {
                         Txtchange.setText("");
                        }
                         break;
                        
                    case "16":
                        data = vd.get(15);
                          int purchasedStock15 = purchaseProduct(data, money);
                         if (purchasedStock15 >0) {
                        redbull.setText(Integer.toString(purchasedStock15));
                        Txtchange.setText(Double.toString(money - data.getPrice()));
                         model.addRow(new Object[]{data.getItemNum(), data.getPname(),  fprc(data.getPrice())});
                        }else {
                         Txtchange.setText("");
                        }
                         break;
                         
                    case "17":
                        data = vd.get(16);
                          int purchasedStock16 = purchaseProduct(data, money);
                         if (purchasedStock16 >0) {
                        zesto.setText(Integer.toString(purchasedStock16));
                        Txtchange.setText(Double.toString(money - data.getPrice()));
                         model.addRow(new Object[]{data.getItemNum(), data.getPname(),  fprc(data.getPrice())});
                        }else {
                         Txtchange.setText("");
                        }
                         break;
                         
                    case "18":
                        data = vd.get(17);
                          int purchasedStock17 = purchaseProduct(data, money);
                         if (purchasedStock17 >0) {
                        mountain.setText(Integer.toString(purchasedStock17));
                        Txtchange.setText(Double.toString(money - data.getPrice()));
                         model.addRow(new Object[]{data.getItemNum(), data.getPname(),  fprc(data.getPrice())});
                        }else {
                         Txtchange.setText("");
                        }
                         break;
                        
                    case "19":
                        data = vd.get(18);
                          int purchasedStock18 = purchaseProduct(data, money);
                         if (purchasedStock18 >0) {
                        gatoradeB.setText(Integer.toString(purchasedStock18));
                        Txtchange.setText(Double.toString(money - data.getPrice()));
                         model.addRow(new Object[]{data.getItemNum(), data.getPname(),  fprc(data.getPrice())});
                         }else {
                         Txtchange.setText("");
                        }
                         break;
                         
                    case "20":
                        data = vd.get(19);
                          int purchasedStock19 = purchaseProduct(data, money);
                         if (purchasedStock19 >0) {
                        gatoradeO.setText(Integer.toString(purchasedStock19));
                        Txtchange.setText(Double.toString(money - data.getPrice()));
                         model.addRow(new Object[]{data.getItemNum(), data.getPname(),  fprc(data.getPrice())});
                         }else {
                         Txtchange.setText("");
                        }
                         break;
                        
                    case "21":
                        data = vd.get(20);
                          int purchasedStock20 = purchaseProduct(data, money);
                         if (purchasedStock20 >0) {
                        gatoradeV.setText(Integer.toString(purchasedStock20));
                        Txtchange.setText(Double.toString(money - data.getPrice()));
                         model.addRow(new Object[]{data.getItemNum(), data.getPname(),  fprc(data.getPrice())});
                         }else {
                         Txtchange.setText("");
                        }
                         break;
                        
                    default:
                      JOptionPane.showMessageDialog(null, "\"Theres no products for your selected products\"", "Pleas Try Again.!", JOptionPane.ERROR_MESSAGE);
                        break;
                        
                }
             
                
               /* if (data != null) {
                    double change = money - vd.get(Integer.parseInt(selection) - 1).getPrice();
                    Txtchange.setText(String.format("₱%.2f", change));
                    showTableStocks();
                }*/
            }
        } /* }else if (jTxt1.getText().equals("2")) {
        VendingData data = vd.get(1);
        if (data != null) {
        int updatedCokeStock = purchaseProduct(data);
        coke.setText(Integer.toString(updatedCokeStock));
        }
        }else if (jTxt1.getText().equals("3")) {
        VendingData data = vd.get(2);
        if (data != null) {
        int updatedCokeStock = purchaseProduct(data);
        royal.setText(Integer.toString(updatedCokeStock));
        }
        }else if (jTxt1.getText().equals("4")) {
        VendingData data = vd.get(3);
        if (data != null) {
        int updatedCokeStock = purchaseProduct(data);
        rc.setText(Integer.toString(updatedCokeStock));
        }
        }else if (jTxt1.getText().equals("5")) {
        VendingData data = vd.get(4);
        if (data != null) {
        int updatedCokeStock = purchaseProduct(data);
        pepsi.setText(Integer.toString(updatedCokeStock));
        }
        }else if (jTxt1.getText().equals("6")) {
        VendingData data = vd.get(5);
        if (data != null) {
        int updatedCokeStock = purchaseProduct(data);
        sprite.setText(Integer.toString(updatedCokeStock));
        }
        }else if (jTxt1.getText().equals("7")) {
        VendingData data = vd.get(6);
        if (data != null) {
        int updatedCokeStock = purchaseProduct(data);
        coke2.setText(Integer.toString(updatedCokeStock));
        }
        }else if (jTxt1.getText().equals("8")) {
        VendingData data = vd.get(7);
        if (data != null) {
        int updatedCokeStock = purchaseProduct(data);
        sting.setText(Integer.toString(updatedCokeStock));
        }
        }else if (jTxt1.getText().equals("9")) {
        VendingData data = vd.get(8);
        if (data != null) {
        int updatedCokeStock = purchaseProduct(data);
        nature.setText(Integer.toString(updatedCokeStock));
        }
        }else if (jTxt1.getText().equals("10")) {
        VendingData data = vd.get(9);
        if (data != null) {
        int updatedCokeStock = purchaseProduct(data);
        summit1l.setText(Integer.toString(updatedCokeStock));
        }
        }else if (jTxt1.getText().equals("11")) {
        VendingData data = vd.get(10);
        if (data != null) {
        int updatedCokeStock = purchaseProduct(data);
        cobrar.setText(Integer.toString(updatedCokeStock));
        }
        }else if (jTxt1.getText().equals("12")) {
        VendingData data = vd.get(11);
        if (data != null) {
        int updatedCokeStock = purchaseProduct(data);
        summits.setText(Integer.toString(updatedCokeStock));
        }
        }else if (jTxt1.getText().equals("13")) {
        VendingData data = vd.get(12);
        if (data != null) {
        int updatedCokeStock = purchaseProduct(data);
        abs.setText(Integer.toString(updatedCokeStock));
        }
        }else if (jTxt1.getText().equals("14")) {
        VendingData data = vd.get(13);
        if (data != null) {
        int updatedCokeStock = purchaseProduct(data);
        c2.setText(Integer.toString(updatedCokeStock));
        }
        }else if (jTxt1.getText().equals("15")) {
        VendingData data = vd.get(14);
        if (data != null) {
        int updatedCokeStock = purchaseProduct(data);
        minute.setText(Integer.toString(updatedCokeStock));
        }
        }else if (jTxt1.getText().equals("16")) {
        VendingData data = vd.get(15);
        if (data != null) {
        int updatedCokeStock = purchaseProduct(data);
        redbull.setText(Integer.toString(updatedCokeStock));
        }
        }else if (jTxt1.getText().equals("17")) {
        VendingData data = vd.get(16);
        if (data != null) {
        int updatedCokeStock = purchaseProduct(data);
        zesto.setText(Integer.toString(updatedCokeStock));
        }
        }else if (jTxt1.getText().equals("18")) {
        VendingData data = vd.get(17);
        if (data != null) {
        int updatedCokeStock = purchaseProduct(data);
        mountain.setText(Integer.toString(updatedCokeStock));
        }
        }else if (jTxt1.getText().equals("19")) {
        VendingData data = vd.get(18);
        if (data != null) {
        int updatedCokeStock = purchaseProduct(data);
        gatoradeB.setText(Integer.toString(updatedCokeStock));
        }
        }else if (jTxt1.getText().equals("20")) {
        VendingData data = vd.get(19);
        if (data != null) {
        int updatedCokeStock = purchaseProduct(data);
        gatoradeO.setText(Integer.toString(updatedCokeStock));
        }
        }else if (jTxt1.getText().equals("21")) {
        VendingData data = vd.get(20);
        if (data != null) {
        int updatedCokeStock = purchaseProduct(data);
        gatoradeV.setText(Integer.toString(updatedCokeStock));
        }
        }*/ // Example usage for multiple products
/*if (jTxt1.getText().equals("7")) {
        VendingData pepsiData = vd.get(6);
        if (pepsiData != null) {
        int updatedPepsiStock = purchaseProduct(pepsiData);
        coke2.setText(Integer.toString(updatedPepsiStock));
        }
        }else if(jTxt1.getText().equals("1")){
        int updatedCokeStock = purchaseProduct("1", "cobra", "1", "20");
        cobra1.setText(Integer.toString(updatedCokeStock));
        }else if(jTxt1.getText().equals("2")){
        int updatedCokeStock = purchaseProduct("2", "Coca Cola", "1", "30");
        coke.setText(Integer.toString(updatedCokeStock));
        }else if(jTxt1.getText().equals("3")){
        int updatedCokeStock = purchaseProduct("1", "cobra", "1", "30");
        cobra1.setText(Integer.toString(updatedCokeStock));
        }*/
        /* String url = "jdbc:mysql://localhost:3306/vendingmachine1";
        String sUser = "root";
        String sPass = "";
        try {
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con = DriverManager.getConnection(url, sUser, sPass);
        if (jTxt1.getText().equals("1")) {
        String itemNum = "7";
        String prod_name = "cokesss";
        String qty = "1"; // This could be dynamically set based on user selection
        String price = "30";
        // Get the current date in SQL format
        try {
        // Inserting the sale record
        PreparedStatement pst = con.prepareStatement("INSERT INTO sale(Item_num, product_name, qty, price, date) VALUES (?, ?, ?, ?, ?)");
        pst.setString(1, itemNum);
        pst.setString(2, prod_name);
        pst.setString(3, qty);
        pst.setString(4, price);
        pst.setDate(5, sqlDate);
        pst.executeUpdate();
        // Fetch current stock from the database for the specified product
        pst = con.prepareStatement("SELECT qty FROM stocks WHERE Item_num = ?");
        pst.setString(1, itemNum);
        ResultSet rs = pst.executeQuery();
        int currentStock = 0;
        if (rs.next()) {
        currentStock = rs.getInt("qty");
        int soldQuantity = Integer.parseInt(qty); // Convert sold quantity to integer
        currentStock -= soldQuantity; // Decrease stock by the sold quantity
        }
        // Update the stock in the database for the specified product
        pst = con.prepareStatement("UPDATE stocks SET qty = ? WHERE Item_num = ?");
        pst.setInt(1, currentStock);
        pst.setString(2, itemNum);
        pst.executeUpdate();
        final int updatedStock = currentStock; // Declare a final variable to access within lambda
        SwingUtilities.invokeLater(new Runnable() {
        public void run() {
        coke2.setText(Integer.toString(updatedStock)); // Update the displayed stock in the GUI
        }
        });
        JOptionPane.showMessageDialog(null, "Successfully Purchased!\nThank you!");
        } catch (SQLException ex) {
        Logger.getLogger(vendingMachinePOS.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        } catch (ClassNotFoundException ex) {
        Logger.getLogger(vendingMachinePOS.class.getName()).log(Level.SEVERE, null, ex);
        }   catch (SQLException ex) {
        Logger.getLogger(vendingMachinePOS.class.getName()).log(Level.SEVERE, null, ex);
        }
         */

    }//GEN-LAST:event_okButActionPerformed

    // Create a method to handle product purchases


    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       
        int result = JOptionPane.showConfirmDialog(this, "Do you really want to exit?", "Confirm Exit?", JOptionPane.YES_NO_OPTION);
        if (result == JOptionPane.YES_OPTION) {
             // user clicked Yes, so exit the application
             System.exit(0);
        } else {
         // user clicked No, so do nothing
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        tp.setText("");
        jTxt1.setText("");
                Txtchange.setText("");
               
                 int rowIndex = 0;

    if (model != null && rowIndex >= 0 && rowIndex < model.getRowCount()) {
        model.removeRow(rowIndex);
    } else {
        // Handle if the model is null or the row index is out of bounds
        System.out.println("Invalid row index or model is null");
    }

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       LogIn lg = new LogIn();
       lg.setVisible(true);
       dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void tpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tpKeyTyped
          char number=evt.getKeyChar();
        if(!(Character.isDigit(number)) || (number == KeyEvent.VK_BACK_SPACE) || (number == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_tpKeyTyped

    private void tpKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tpKeyReleased
          if (tp.getText().isEmpty()) {
       okBut.setEnabled(false);
       Bt1.setEnabled(false);
       Bt2.setEnabled(false);
       Bt3.setEnabled(false);
       Bt4.setEnabled(false);
       Bt5.setEnabled(false);
       Bt6.setEnabled(false);
       Bt7.setEnabled(false);
       Bt8.setEnabled(false);
       Bt9.setEnabled(false);
       Bt0.setEnabled(false);
       Btclr.setEnabled(false);
    } else {
        okBut.setEnabled(true);
         Bt1.setEnabled(true);
       Bt2.setEnabled(true);
       Bt3.setEnabled(true);
       Bt4.setEnabled(true);
       Bt5.setEnabled(true);
       Bt6.setEnabled(true);
       Bt7.setEnabled(true);
       Bt8.setEnabled(true);
       Bt9.setEnabled(true);
       Bt0.setEnabled(true);
       Btclr.setEnabled(true);
       
    }
    }//GEN-LAST:event_tpKeyReleased

    private void tpFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tpFocusGained
            
        if(tp.getText().equals("Insert Coin")){
          tp.setText("");
      }
    }//GEN-LAST:event_tpFocusGained

    private void tpFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tpFocusLost
         
        if(tp.getText().equals("")){
          tp.setText("Insert Coin");
      }
    }//GEN-LAST:event_tpFocusLost

    private void tpKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tpKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tpKeyPressed

    private void TxtchangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtchangeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TxtchangeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(vendingMachinePOS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(vendingMachinePOS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(vendingMachinePOS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(vendingMachinePOS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               
            try {
             UIManager.setLookAndFeel("javax.swing.plaf.metal.MetalLookAndFeel");
                
                new vendingMachinePOS().setVisible(true);
               }catch(Exception e){
                 e.printStackTrace();
                }
            }
        });
        
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Bt0;
    private javax.swing.JButton Bt1;
    private javax.swing.JButton Bt2;
    private javax.swing.JButton Bt3;
    private javax.swing.JButton Bt4;
    private javax.swing.JButton Bt5;
    private javax.swing.JButton Bt6;
    private javax.swing.JButton Bt7;
    private javax.swing.JButton Bt8;
    private javax.swing.JButton Bt9;
    private javax.swing.JButton Btclr;
    private javax.swing.JTextField Txtchange;
    private javax.swing.JLabel abs;
    private javax.swing.JLabel c2;
    private javax.swing.JLabel cobra;
    private javax.swing.JLabel cobra1;
    private javax.swing.JLabel cobrar;
    private javax.swing.JLabel coke;
    private javax.swing.JLabel coke10;
    private javax.swing.JLabel coke11;
    private javax.swing.JLabel coke13;
    private javax.swing.JLabel coke15;
    private javax.swing.JLabel coke17;
    private javax.swing.JLabel coke2;
    private javax.swing.JLabel coke20;
    private javax.swing.JLabel coke22;
    private javax.swing.JLabel coke23;
    private javax.swing.JLabel coke26;
    private javax.swing.JLabel coke27;
    private javax.swing.JLabel coke29;
    private javax.swing.JLabel coke3;
    private javax.swing.JLabel coke32;
    private javax.swing.JLabel coke34;
    private javax.swing.JLabel coke36;
    private javax.swing.JLabel coke37;
    private javax.swing.JLabel coke6;
    private javax.swing.JLabel coke7;
    private javax.swing.JLabel coke8;
    private javax.swing.JLabel coke9;
    private javax.swing.JLabel gatoradeB;
    private javax.swing.JLabel gatoradeO;
    private javax.swing.JLabel gatoradeV;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelcoke;
    private javax.swing.JLabel jLabelcoke10;
    private javax.swing.JLabel jLabelcoke11;
    private javax.swing.JLabel jLabelcoke12;
    private javax.swing.JLabel jLabelcoke13;
    private javax.swing.JLabel jLabelcoke14;
    private javax.swing.JLabel jLabelcoke18;
    private javax.swing.JLabel jLabelcoke19;
    private javax.swing.JLabel jLabelcoke20;
    private javax.swing.JLabel jLabelcoke21;
    private javax.swing.JLabel jLabelcoke22;
    private javax.swing.JLabel jLabelcoke23;
    private javax.swing.JLabel jLabelcoke24;
    private javax.swing.JLabel jLabelcoke25;
    private javax.swing.JLabel jLabelcoke26;
    private javax.swing.JLabel jLabelcoke4;
    private javax.swing.JLabel jLabelcoke5;
    private javax.swing.JLabel jLabelcoke6;
    private javax.swing.JLabel jLabelcoke7;
    private javax.swing.JLabel jLabelcoke8;
    private javax.swing.JLabel jLabelcoke9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTxt1;
    private javax.swing.JLabel minute;
    private javax.swing.JLabel mountain;
    private javax.swing.JLabel nature;
    private javax.swing.JButton okBut;
    private javax.swing.JLabel pepsi;
    private javax.swing.JLabel rc;
    private javax.swing.JLabel redbull;
    private javax.swing.JLabel royal;
    private javax.swing.JLabel sprite;
    private javax.swing.JLabel sting;
    private javax.swing.JLabel summit1l;
    private javax.swing.JLabel summits;
    private javax.swing.JTextField tp;
    private javax.swing.JLabel zesto;
    // End of variables declaration//GEN-END:variables

}
